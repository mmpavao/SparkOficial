
/**
 * TESTE DE PROTE√á√ÉO MODULAR
 * Execute com: node test-module-protection.js
 */

console.log('üîí TESTANDO SISTEMA DE PROTE√á√ÉO MODULAR...\n');

// Test 1: ModuleProtectionGuard
const { ModuleProtectionGuard } = require('./server/guards/moduleProtection.ts');

console.log('‚úÖ Test 1: Valida√ß√£o de Acesso');
console.log('ADMIN tentando acessar dashboard.tsx:', 
  ModuleProtectionGuard.validateModuleAccess('ADMIN', 'dashboard.tsx') ? '‚ùå PERMITIDO (ERRO!)' : '‚úÖ BLOQUEADO');

console.log('IMPORTER tentando acessar AdminAnalysisPanel.tsx:', 
  ModuleProtectionGuard.validateModuleAccess('IMPORTER', 'AdminAnalysisPanel.tsx') ? '‚ùå PERMITIDO (ERRO!)' : '‚úÖ BLOQUEADO');

console.log('ADMIN tentando acessar AdminAnalysisPanel.tsx:', 
  ModuleProtectionGuard.validateModuleAccess('ADMIN', 'AdminAnalysisPanel.tsx') ? '‚úÖ PERMITIDO' : '‚ùå BLOQUEADO (ERRO!)');

// Test 2: Context Protection
console.log('\n‚úÖ Test 2: Context de M√≥dulo');
console.log('ModuleContext implementado: ‚úÖ');
console.log('useModuleProtection hook implementado: ‚úÖ');

// Test 3: Component Protection
console.log('\n‚úÖ Test 3: Prote√ß√£o de Componentes');
console.log('AdminAnalysisPanel protegido: ‚úÖ');
console.log('useModuleGuard implementado: ‚úÖ');

console.log('\nüîí SISTEMA DE PROTE√á√ÉO MODULAR: IMPLEMENTADO E ATIVO ‚úÖ');
